# This workflow will build and push a node.js application to an Azure Web App when there is a push to the master branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/azure/app-service/app-service-plan-manage#create-an-app-service-plan
#
# To configure this workflow:
#
# 1. For Linux apps, add an app setting called WEBSITE_WEBDEPLOY_USE_SCM and set it to true in your app **before downloading the file**.
#      For more instructions see: https://docs.microsoft.com/azure/app-service/configure-common#configure-app-settings
#
# 2. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the values for the AZURE_WEBAPP_NAME, AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables  (below).
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
on:
  push:
    branches:
      - master

env:
  AZURE_WEBAPP_NAME: your-app-name    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '10.x'                # set this to the node version to use

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@v2
    - name: Azure Static Web Apps Deploy
      uses: Azure/static-web-apps-deploy@v1
      with:
        # Action to perform
        action: 
        # Directory location of the application source code
          app_location: 
        # Required token
          azure_static_web_apps_api_token: 
        # Custom command for Oryx to run when building Azure Functions source code
          api_build_command: # optional
        # Directory location of the Azure Functions source code
          api_location: # optional
        # Identical in use to output_location
          app_artifact_location: # optional
        # Directory location of the compiled application code after building
          output_location: # optional
        # Custom command for Oryx to run when building application source code
          app_build_command: # optional
        # Token for interacting with the Github repository. Currently used only for commenting on Pull Requests.
          repo_token: # optional
        # Directory location where the routes.json file can be found in the source code
          routes_location: # optional
        # Skips the build step for the application source code if set to true.
          skip_app_build: # optional
